package com.timeSNS.repository;

import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

import com.timeSNS.dto.ContentDto;
import com.timeSNS.entity.Timelinecontent;

public interface TimelinecontentRepository extends JpaRepository<Timelinecontent, Long>{
	
//	타인 작성 게시글 페이징 처리를 위한 쿼리
	@Query(value = 
			"SELECT TIMELINECONTENT.TLCIDX, TIMELINECONTENT.TLIDX, TIMELINECONTENT.MIDX, "
			+ "MEMBER.MID, MEMBER.MNICKNAME, MEMBER.MPHOTO, TIMELINECONTENT.TLCREGDATE, "
			+ "TIMELINECONTENT.TLCDATE, TIMELINECONTENT.TLCPLACE, TIMELINECONTENT.TLCIMAGE, TIMELINECONTENT.TLCCONTENT, "
			+ "TIMELINECONTENT.TLCEMOTION, TIMELINECONTENT.TLCPUBYN, TIMELINECONTENT.TLCDELYN, TIMELINECONTENT.TLCTAG "
			+ "FROM TIMELINECONTENT "
			+ "JOIN MEMBER "
			+ "ON TIMELINECONTENT.MIDX = MEMBER.MIDX "
			+ "WHERE TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLCPUBYN = 'Y' "
			+ "AND TIMELINECONTENT.TLIDX = ?1 "
			+ "ORDER BY TIMELINECONTENT.TLCREGDATE DESC",
			countQuery = 
			"SELECT COUNT(*) "
			+ "FROM TIMELINECONTENT "
			+ "JOIN MEMBER "
			+ "ON TIMELINECONTENT.MIDX = MEMBER.MIDX "
			+ "WHERE TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLCPUBYN = 'Y' "
			+ "AND TIMELINECONTENT.TLIDX = ?1 "
			+ "ORDER BY TIMELINECONTENT.TLCREGDATE DESC",
			nativeQuery = true)
	Page<ContentDto> findByTlidxAndTlcpubynAndTlcdelyn(int tlidx, String tlcpubyn, String tlcdelyn, Pageable pageable);
	int countByTlidx(int tlidx);
	
//	본인 작성 게시글 페이징 처리를 위한 쿼리
	@Query(value = 
			"SELECT TIMELINECONTENT.TLCIDX, TIMELINECONTENT.TLIDX, TIMELINECONTENT.MIDX, "
			+ "MEMBER.MID, MEMBER.MNICKNAME, MEMBER.MPHOTO, TIMELINECONTENT.TLCREGDATE, "
			+ "TIMELINECONTENT.TLCDATE, TIMELINECONTENT.TLCPLACE, TIMELINECONTENT.TLCIMAGE, TIMELINECONTENT.TLCCONTENT, "
			+ "TIMELINECONTENT.TLCEMOTION, TIMELINECONTENT.TLCPUBYN, TIMELINECONTENT.TLCDELYN, TIMELINECONTENT.TLCTAG "
			+ "FROM TIMELINECONTENT "
			+ "JOIN MEMBER "
			+ "ON TIMELINECONTENT.MIDX = MEMBER.MIDX "
			+ "WHERE TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLIDX = ?1 "
			+ "ORDER BY TIMELINECONTENT.TLCREGDATE DESC",
			countQuery = 
			"SELECT COUNT(*) "
			+ "FROM TIMELINECONTENT "
			+ "JOIN MEMBER "
			+ "ON TIMELINECONTENT.MIDX = MEMBER.MIDX "
			+ "WHERE TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLIDX = ?1 "
			+ "ORDER BY TIMELINECONTENT.TLCREGDATE DESC",
			nativeQuery = true)
	Page<ContentDto> findByTlidxAndTlcdelyn(int tlidx, String tlcdelyn, Pageable pageable);
	
//	검색 내역 페이징 처리를 위한 쿼리
	@Query(value = 
			"SELECT TIMELINECONTENT.TLCIDX, TIMELINECONTENT.TLIDX, TIMELINECONTENT.MIDX, "
			+ "MEMBER.MID, MEMBER.MNICKNAME, MEMBER.MPHOTO, TIMELINECONTENT.TLCREGDATE, "
			+ "TIMELINECONTENT.TLCDATE, TIMELINECONTENT.TLCPLACE, TIMELINECONTENT.TLCIMAGE, TIMELINECONTENT.TLCCONTENT, "
			+ "TIMELINECONTENT.TLCEMOTION, TIMELINECONTENT.TLCPUBYN, TIMELINECONTENT.TLCDELYN, TIMELINECONTENT.TLCTAG "
			+ "FROM TIMELINECONTENT "
			+ "JOIN MEMBER "
			+ "ON TIMELINECONTENT.MIDX = MEMBER.MIDX "
			+ "WHERE TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLCPUBYN = 'Y' "
			+ "AND TIMELINECONTENT.TLCCONTENT LIKE %?1% "
			+ "ORDER BY TIMELINECONTENT.TLCREGDATE DESC",
			countQuery = 
			"SELECT COUNT(*) "
			+ "FROM TIMELINECONTENT "
			+ "JOIN MEMBER "
			+ "ON TIMELINECONTENT.MIDX = MEMBER.MIDX "
			+ "WHERE TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLCPUBYN = 'Y' "
			+ "AND TIMELINECONTENT.TLCCONTENT LIKE %?1% "
			+ "ORDER BY TIMELINECONTENT.TLCREGDATE DESC",
			nativeQuery = true)
	Page<ContentDto> findByTlccontentContainingAndTlcpubynAndTlcdelyn(String content, String tlcpubyn, String tlcdelyn, Pageable pageable);
	
//	가장 최근에 등록한 게시글 가져오기
	Optional<Timelinecontent> findTop1ByTlidxOrderByTlcregdateDesc(int tlidx);
	
//	메인 피드 내용 가져오기
	@Query(value = 
			"SELECT TIMELINECONTENT.TLCIDX, TIMELINECONTENT.TLIDX, TIMELINECONTENT.MIDX, "
			+ "MEMBER.MID, MEMBER.MNICKNAME, MEMBER.MPHOTO, TIMELINECONTENT.TLCREGDATE, "
			+ "TIMELINECONTENT.TLCDATE, TIMELINECONTENT.TLCPLACE, TIMELINECONTENT.TLCIMAGE, TIMELINECONTENT.TLCCONTENT, "
			+ "TIMELINECONTENT.TLCEMOTION, TIMELINECONTENT.TLCPUBYN, TIMELINECONTENT.TLCDELYN, TIMELINECONTENT.TLCTAG "
			+ "FROM TIMELINECONTENT "
			+ "JOIN FOLLOW "
			+ "ON TIMELINECONTENT.TLIDX = FOLLOW.TLIDX "
			+ "JOIN MEMBER "
			+ "ON MEMBER.MIDX = TIMELINECONTENT.MIDX "
			+ "WHERE FOLLOW.FLWRMIDX = ?1 "
			+ "AND TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLCPUBYN  = 'Y' "
			+ "ORDER BY TIMELINECONTENT.TLCREGDATE DESC", 
			countQuery =
			"SELECT COUNT(*) "
			+ "FROM TIMELINECONTENT "
			+ "JOIN FOLLOW "
			+ "ON TIMELINECONTENT.TLIDX = FOLLOW.TLIDX "
			+ "WHERE FOLLOW.FLWRMIDX = ?1 "
			+ "AND TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLCPUBYN  = 'Y'",
			nativeQuery = true)
	Page<ContentDto> findByTlidx(int midx, Pageable pageable);
	
//	태그 검색 결과 내용 가져오기
	@Query(value = 
			"SELECT TIMELINECONTENT.TLCIDX, TIMELINECONTENT.TLIDX, TIMELINECONTENT.MIDX, "
			+ "MEMBER.MID, MEMBER.MNICKNAME, MEMBER.MPHOTO, TIMELINECONTENT.TLCREGDATE, "
			+ "TIMELINECONTENT.TLCDATE, TIMELINECONTENT.TLCPLACE, TIMELINECONTENT.TLCIMAGE, TIMELINECONTENT.TLCCONTENT, "
			+ "TIMELINECONTENT.TLCEMOTION, TIMELINECONTENT.TLCPUBYN, TIMELINECONTENT.TLCDELYN, TIMELINECONTENT.TLCTAG "
			+ "FROM TIMELINECONTENT "
			+ "JOIN (SELECT * FROM POSTTAG WHERE TIDX = ?1) TIDXLIST "
			+ "ON TIMELINECONTENT.TLCIDX = TIDXLIST.TLCIDX "
			+ "JOIN MEMBER "
			+ "ON TIMELINECONTENT.MIDX = MEMBER.MIDX "
			+ "WHERE TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLCPUBYN = 'Y' "
			+ "ORDER BY TIMELINECONTENT.TLCREGDATE DESC",
			countQuery = 
			"SELECT COUNT(*) "
			+ "FROM TIMELINECONTENT "
			+ "JOIN (SELECT * FROM POSTTAG WHERE TIDX = ?1) TIDXLIST "
			+ "ON TIMELINECONTENT.TLCIDX = TIDXLIST.TLCIDX "
			+ "WHERE TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLCPUBYN = 'Y'",
			nativeQuery = true)
	Page<ContentDto> findByTidx(int tidx, Pageable pageable);
	
	@Query(value = 
			"SELECT TIMELINECONTENT.TLCIDX, TIMELINECONTENT.TLIDX, TIMELINECONTENT.MIDX, "
			+ "MEMBER.MID, MEMBER.MNICKNAME, MEMBER.MPHOTO, TIMELINECONTENT.TLCREGDATE, "
			+ "TIMELINECONTENT.TLCDATE, TIMELINECONTENT.TLCPLACE, TIMELINECONTENT.TLCIMAGE, TIMELINECONTENT.TLCCONTENT, "
			+ "TIMELINECONTENT.TLCEMOTION, TIMELINECONTENT.TLCPUBYN, TIMELINECONTENT.TLCDELYN, TIMELINECONTENT.TLCTAG "
			+ "FROM TIMELINECONTENT "
			+ "JOIN MEMBER "
			+ "ON TIMELINECONTENT.MIDX = MEMBER.MIDX "
			+ "WHERE TIMELINECONTENT.TLCDELYN = 'N' "
			+ "AND TIMELINECONTENT.TLCPUBYN = 'Y' "
			+ "AND TIMELINECONTENT.TLCIDX = ?1 "
			+ "ORDER BY TIMELINECONTENT.TLCREGDATE DESC",
			nativeQuery = true)
	Optional<ContentDto> findByTlcidx(Long tlcidx);
}
